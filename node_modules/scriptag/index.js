"use strict"

class scriptag {
	constructor () {
		if (this.object = Object) this.object.proto = Object.prototype
		if (this.array = Array) this.array.proto = Array.prototype
		if (this.boolean = Boolean) this.boolean.proto = Boolean.prototype
		if (this.number = Number) this.number.proto = Number.prototype
		if (this.string = String) this.string.proto = String.prototype
		}
	}

Object.defineProperty (scriptag.prototype, "export", {
	value: function (output, input) {
		for (var key in input) output.exports [key] = input [key]
		}
	})

Object.defineProperty (scriptag.prototype, "define", {
	value: function (target, n, descriptor) {
		Object.defineProperty (target, n, descriptor)
		}
	})

Object.defineProperty (scriptag.prototype, "property", {
	value: class {
		constructor (target, n, call, descriptor) {
			descriptor = descriptor || {}
			var touch = descriptor.touch || false
			var list = descriptor.list || false
			Object.defineProperty (target, n, {get: call, configurable: touch, enumerable: list})
			}
		}
	})

Object.defineProperty (scriptag.prototype, "function", {
	value: class {
		constructor (target, n, call, descriptor) {
			descriptor = descriptor || {}
			var touch = descriptor.touch || false
			var list = descriptor.list || false
			Object.defineProperty (target, n, {value: call, configurable: touch, enumerable: list})
			}
		}
	})

module.exports = exports = new scriptag
